definitions:
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      updated_at:
        type: string
    type: object
  response.ErrResponse:
    properties:
      errors:
        additionalProperties:
          type: string
        type: object
    type: object
  v1.recoveryPasswordRequest:
    properties:
      password:
        example: YourV@lidPassw0rd!
        maxLength: 32
        minLength: 8
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  v1.refreshRequest:
    properties:
      token:
        description: Refresh token
        type: string
    required:
    - token
    type: object
  v1.refreshResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.resetPasswordRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  v1.signInRequest:
    properties:
      email:
        example: email@example.com
        maxLength: 150
        minLength: 5
        type: string
      password:
        example: YourV@lidPassw0rd!
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  v1.signInResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.signUpRequest:
    properties:
      email:
        example: email@example.com
        maxLength: 150
        minLength: 5
        type: string
      password:
        example: YourV@lidPassw0rd!
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  v1.signUpResponse:
    properties:
      id:
        example: d13a75e2-3d21-4e57-9dc0-3a7f5bee4c25
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Authorization, registration, etc...
  title: Universal authorization service API
  version: "1.0"
paths:
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Get information about the current user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: Current user info
      tags:
      - users
  /api/v1/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Get information about user by id
      parameters:
      - description: User id (UUID)
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      security:
      - BearerAuth: []
      summary: User info by id
      tags:
      - users
  /auth/recovery-password:
    post:
      consumes:
      - application/json
      description: Password recovery request
      parameters:
      - description: Recovery password payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.recoveryPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Recovery password
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh tokens by refresh-token
      parameters:
      - description: Refresh payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.refreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.refreshResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Refresh tokens
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Password reset request
      parameters:
      - description: Reset password payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.resetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Reset password
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in
      parameters:
      - description: Sign in payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.signInRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.signInResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Sign in
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Sign up
      parameters:
      - description: Registration payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.signUpRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.signUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/response.ErrResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrResponse'
      summary: Sign up
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
